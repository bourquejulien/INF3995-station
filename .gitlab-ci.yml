image: docker:22.06-rc

.only-client: &only-client
    only:
        refs:
            - merge_requests
        changes:
            - client/**/*
    before_script:
        - docker info

.only-server: &only-server
    only:
        refs:
            - merge_requests
        changes:
            - server/**/*
    before_script:
        - docker info

stages:
    - build
    - lint
    - test
    - push

build:client:
    stage: build
    <<: *only-client
    script:
        - cd client
        - docker build -t "backend-client-$CI_COMMIT_SHORT_SHA" .

build:server:
    stage: build
    <<: *only-server
    script:
        - cd server
        - docker build -t "backend-server-build-$CI_COMMIT_SHORT_SHA" .

lint:client:
    stage: lint
    needs: ["build:client"]
    allow_failure: true
    <<: *only-client
    script:
        - cd client
        - docker build --target=lint -t="backend-client-lint-$CI_COMMIT_SHORT_SHA" .
        - docker run "backend-client-lint-$CI_COMMIT_SHORT_SHA"

lint:server:
    stage: lint
    needs: ["build:server"]
    allow_failure: true
    <<: *only-server
    script:
        - cd server
        - docker build --target=lint -t="backend-server-lint-$CI_COMMIT_SHORT_SHA" .
        - docker run "backend-server-lint-$CI_COMMIT_SHORT_SHA"

test:client:
    stage: test
    needs: ["build:client"]
    <<: *only-client
    script:
        - cd client
        - docker build --target=test -t="backend-client-test-$CI_COMMIT_SHORT_SHA" .
        - docker run "backend-client-test-$CI_COMMIT_SHORT_SHA"

test:server:
    stage: test
    needs: ["build:server"]
    <<: *only-server
    script:
        - cd server
        - docker build --target=test -t="backend-server-test-$CI_COMMIT_SHORT_SHA" .
        - docker run "backend-server-test-$CI_COMMIT_SHORT_SHA"

push:server:
    stage: push
    tags:
        - x86
    only:
        refs:
            - main
        changes:
            - server/**/*
    before_script:
        - docker info
    variables:
        IMAGE_NAME: "$CI_REGISTRY_IMAGE/server:latest"
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker build --target final -t "$IMAGE_NAME" server
        - docker push "$IMAGE_NAME"

push:client:
    stage: push
    tags:
        - x86
    only:
        refs:
            - main
        changes:
            - client/**/*
    before_script:
        - docker info
    variables:
        IMAGE_NAME: "$CI_REGISTRY_IMAGE/client:latest"
    script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
        - docker build --target final -t "$IMAGE_NAME" client
        - docker push "$IMAGE_NAME"
